name: Update AdGuard Home
on:
  workflow_dispatch:
  schedule:
    - cron: "30 17 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - ".github/workflows/delete-old-workflows.yml"
      - ".github/workflows/update-adguardhome.yml"
      - ".github/workflows/update-clashdashboard.yml"
      - ".github/workflows/update-mihomo.yml"
      - ".github/workflows/update-singbox.yml"

jobs:
  Update:
    runs-on: ubuntu-latest
    steps:
    - name: Clone Repository
      uses: actions/checkout@main

    - name: Download and unzip `upx`
      run: |
        mkdir -p ./tmp/ ./AdGuardHome/
        upx_version=$(curl -sSL https://api.github.com/repos/upx/upx/releases/latest | grep 'tag_name' | sed -e 's/.*v//' -e 's/".*//')
        echo "upx_version=${upx_version}" >> ${GITHUB_ENV}
        wget -P ./tmp/ "https://github.com/upx/upx/releases/download/v${upx_version}/upx-${upx_version}-amd64_linux.tar.xz"
        tar -xf "./tmp/upx-${upx_version}-amd64_linux.tar.xz" -C ./tmp/

    - name: Download and compress `AdGuardHome Release`
      run: |
        adguardhome_release_version=$(curl -sSL https://api.github.com/repos/AdguardTeam/AdGuardHome/releases/latest | grep 'tag_name' | sed -e 's/.*v/v/' -e 's/".*//')
        echo "adguardhome_release_version=${adguardhome_release_version}" >> ${GITHUB_ENV}
        archs=(amd64 armv5 armv6 armv7 arm64 mips_softfloat mipsle_softfloat)
        new_name=(amd64 armv5 armv6 armv7 armv8 mips_softfloat mipsle_softfloat)
        for((i=0;i<7;i++)); do
          wget "https://github.com/AdguardTeam/AdGuardHome/releases/download/${adguardhome_release_version}/AdGuardHome_linux_${archs[i]}.tar.gz" -O - | tar -xz -C ./tmp/
          mv -f ./tmp/AdGuardHome/AdGuardHome "./tmp/AdGuardHome/AdGuardHome_release_linux_${new_name[i]}"
          chmod +x "./tmp/AdGuardHome/AdGuardHome_release_linux_${new_name[i]}"
          "./tmp/upx-${upx_version}-amd64_linux/upx" "./tmp/AdGuardHome/AdGuardHome_release_linux_${new_name[i]}"
        done
        wget -P ./tmp/ "https://github.com/AdguardTeam/AdGuardHome/releases/download/${adguardhome_release_version}/AdGuardHome_windows_amd64.zip"
        unzip -o ./tmp/AdGuardHome_windows_amd64.zip -d ./tmp/
        mv -f ./tmp/AdGuardHome/AdGuardHome.exe ./tmp/AdGuardHome/AdGuardHome_release_windows_amd64.exe

    - name: Download and compress `AdGuardHome Pre-release`
      run: |
        adguardhome_prerelease_version=$(curl -sSL https://api.github.com/repos/AdguardTeam/AdGuardHome/releases | grep 'tag_name' | grep 'b' | head -n 1 | sed -e 's/.*v/v/' -e 's/".*//')
        echo "adguardhome_prerelease_version=${adguardhome_prerelease_version}" >> ${GITHUB_ENV}
        archs=(amd64 armv5 armv6 armv7 arm64 mips_softfloat mipsle_softfloat)
        new_name=(amd64 armv5 armv6 armv7 armv8 mips_softfloat mipsle_softfloat)
        for((i=0;i<7;i++)); do
          wget "https://github.com/AdguardTeam/AdGuardHome/releases/download/${adguardhome_prerelease_version}/AdGuardHome_linux_${archs[i]}.tar.gz" -O - | tar -xz -C ./tmp/
          mv -f ./tmp/AdGuardHome/AdGuardHome "./tmp/AdGuardHome/AdGuardHome_prerelease_linux_${new_name[i]}"
          chmod +x "./tmp/AdGuardHome/AdGuardHome_prerelease_linux_${new_name[i]}"
          "./tmp/upx-${upx_version}-amd64_linux/upx" "./tmp/AdGuardHome/AdGuardHome_prerelease_linux_${new_name[i]}"
        done
        wget -P ./tmp/ "https://github.com/AdguardTeam/AdGuardHome/releases/download/${adguardhome_prerelease_version}/AdGuardHome_windows_amd64.zip"
        unzip -o ./tmp/AdGuardHome_windows_amd64.zip -d ./tmp/
        mv -f ./tmp/AdGuardHome/AdGuardHome.exe ./tmp/AdGuardHome/AdGuardHome_prerelease_windows_amd64.exe

    - name: Move `AdGuardHome` files to `AdGuardHome` directory
      run: |
        rm -f ./tmp/AdGuardHome/*.sig
        mv -f ./tmp/AdGuardHome/AdGuardHome* ./AdGuardHome/
        rm -rf ./tmp*

    - name: Release and upload `AdGuardHome` assets
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        release_name: AdGuardHome
        tag: AdGuardHome
        overwrite: true
        body: "[AdGuardHome](https://github.com/AdguardTeam/AdGuardHome) Release 版和 Pre-release 版"
        file_glob: true
        file: ./AdGuardHome/*

    - name: Commit and push `AdGuardHome` branch
      run: |
        cd ./AdGuardHome/ || exit 1
        git init
        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git checkout -b AdGuardHome
        git add ./AdGuardHome_release* && git commit -m "更新 AdGuardHome Release 版至 ${adguardhome_release_version}"
        git add ./AdGuardHome_prerelease* && git commit -m "更新 AdGuardHome Pre-release 版至 ${adguardhome_prerelease_version}"
        git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
        git push -f -u origin AdGuardHome

    - name: Purge jsDelivr CDN
      run: |
        cd ./AdGuardHome/ || exit 1
        for file in $(ls); do
          curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@AdGuardHome/${file}"
        done
